{"version":3,"sources":["Components/common/Header.js","Components/common/Pagination.js","Components/restaurants/RestaurantList.js","api/apiUtils.js","api/restaurantsApi.js","Components/common/Filter.js","Components/common/Sort.js","Components/home/HomePage.js","Components/PageNotFound.js","Components/App.js","index.js"],"names":["Header","className","range","from","to","step","i","push","Pagination","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","console","log","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","length","leftSpill","rightSpill","leftSpillPage","extraPages","ceil","this","prevProps","aria-label","map","index","key","href","onClick","aria-hidden","e","Component","RestaurantList","restaurants","currentRestaurants","resetList","offset","slice","data","prevState","totalRestaurants","headerClass","join","trim","restaurant","id","name","city","telephone","genre","React","handleResponse","response","a","ok","json","status","text","error","Error","handleError","baseUrl","FiltersList","checkedOptions","optionsList","checkboxItems","option","type","value","onChange","checked","dirMap","gt","asc","desc","lt","doSort","A","B","property","direction","b","toLowerCase","createSorter","args","ret","some","sorter","HomePage","allRestaurants","selectedOptions","sorters","compareBy","sortList","arrayCopy","sort","users","fetch","headers","Authorization","then","catch","parseData","Array","isArray","filter","r","includes","indexOf","splice","statesList","createStatesList","attiresList","attire","createAttiresList","genresList","split","g","createGenresList","handleOnChange","bind","defaultProps","PageNotFound","App","exact","path","component","render","document","getElementById"],"mappings":"8UAWeA,MATf,WACE,OACE,yBAAKC,UAAU,aACX,+DACA,wE,iCCAFC,EAAQ,SAACC,EAAMC,GAInB,IAJqC,IAAdC,EAAa,uDAAN,EAC1BC,EAAIH,EACFD,EAAQ,GAEPI,GAAKF,GACVF,EAAMK,KAAKD,GACXA,GAAKD,EAGP,OAAOH,GAwLMM,E,kDApLb,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IA4BRC,SAAW,SAAAC,GAAS,IAAD,EACkB,EAAKF,MAAhCG,qBADS,MACO,SAAAC,GAAC,OAAIA,GADZ,EAGXC,EAAcC,KAAKC,IAAI,EAAGD,KAAKE,IAAIN,EAAM,EAAKO,aAE9CC,EAAiB,CACrBL,cACAI,WAAY,EAAKA,WACjBE,UAAW,EAAKA,UAChBC,aAAc,EAAKA,cAGrB,EAAKC,SAAS,CAAER,gBAAe,kBAAMF,EAAcO,OAzClC,EA4CnBI,YAAc,SAACZ,EAAMa,GACnBA,EAAIC,iBACJ,EAAKf,SAASC,IA9CG,EAiDnBe,eAAiB,SAAAF,GACfA,EAAIC,iBACJ,EAAKf,SAAS,EAAKiB,MAAMb,YAAoC,EAAtB,EAAKc,eAAqB,IAnDhD,EAsDnBC,gBAAkB,SAAAL,GAChBA,EAAIC,iBACJ,EAAKf,SAAS,EAAKiB,MAAMb,YAAoC,EAAtB,EAAKc,eAAqB,IAxDhD,EA2DnBE,iBAAmB,WAEjBC,QAAQC,IAAR,gBACA,IAAMd,EAAa,EAAKA,WAClBJ,EAAc,EAAKa,MAAMb,YACzBc,EAAiB,EAAKA,eAEtBK,EAAqC,EAAtB,EAAKL,eAAqB,EAG/C,GAAIV,EAFgBe,EAAe,EAEL,CAC5B,IAAIC,EAAQ,GAENC,EAAYrB,EAAcc,EAC1BQ,EAAatB,EAAcc,EAC3BS,EAAiBnB,EAAa,EAE9BoB,EAAYH,EAAY,EAAIA,EAAY,EACxCI,EAAUH,EAAaC,EAAiBD,EAAaC,EAKrDG,EAAoBP,GAH1BC,EAAQhC,EAAMoC,EAAWC,IAEAE,OAC6B,EAEhDC,EAAYJ,EAAY,EACxBK,EAAaJ,EAAUF,EAEvBO,EAvGM,OA0GZ,GAAIF,IAAcC,EAAY,CAC5B,IAAME,EAAa3C,EAAMoC,EAAYE,EAAmBF,EAAY,GACpEJ,EAAK,CAAIU,GAAJ,mBAAsBC,GAAtB,YAAqCX,SACrC,IAAKQ,GAAaC,EAAY,CACnC,IAAME,EAAa3C,EAAMqC,EAAU,EAAGA,EAAUC,GAChDN,EAAK,sBAAOA,GAAP,YAAiBW,GAAjB,CA9GM,eA+GFH,GAAaC,IACtBT,EAAK,CAAIU,GAAJ,mBAAsBV,GAAtB,CAhHM,WAmHb,MAAM,CAAE,GAAR,mBAAcA,GAAd,CAAqBhB,IAGvB,OAAOhB,EAAM,EAAGgB,IAvGC,MAEmDT,EAA5DY,oBAFS,MAEM,KAFN,IAEmDZ,EAAvCW,iBAFZ,MAEwB,GAFxB,IAEmDX,EAAvBmB,sBAF5B,MAE6C,EAF7C,SAIjB,EAAKR,UAAiC,kBAAdA,EAAyBA,EAAY,GAC7D,EAAKC,aAAuC,kBAAjBA,EAA4BA,EAAe,EAEtE,EAAKO,eACuB,kBAAnBA,EACHb,KAAKC,IAAI,EAAGD,KAAKE,IAAIW,EAAgB,IACrC,EAEN,EAAKV,WAAaH,KAAK+B,KAAK,EAAKzB,aAAe,EAAKD,WAErD,EAAKO,MAAQ,CAAEb,YAAa,GAdX,E,gEAkBjBiC,KAAKrC,SAAS,K,yCAGGsC,GAEbA,EAAU3B,eAAiB0B,KAAKtC,MAAMY,eACxC0B,KAAK7B,WAAa6B,KAAKtC,MAAMS,c,+BAkFvB,IAAD,OACP,IAAK6B,KAAK1B,aAAc,OAAO,KAE/B,GAAwB,IAApB0B,KAAK7B,WAAkB,OAAO,KAH3B,IAKCJ,EAAgBiC,KAAKpB,MAArBb,YACFoB,EAAQa,KAAKjB,mBAEnB,OACE,kBAAC,WAAD,KACE,yBAAKmB,aAAW,0BACd,wBAAIhD,UAAU,cACXiC,EAAMgB,KAAI,SAACvC,EAAMwC,GAChB,MAvII,SAuIAxC,EAEA,wBAAIyC,IAAKD,EAAOlD,UAAU,aACxB,uBACEA,UAAU,YACVoD,KAAK,IACLJ,aAAW,WACXK,QAAS,EAAK5B,gBAEd,0BAAM6B,cAAY,QAAlB,QACA,0BAAMtD,UAAU,WAAhB,cAhJH,UAqJDU,EAEA,wBAAIyC,IAAKD,EAAOlD,UAAU,aACxB,uBACEA,UAAU,YACVoD,KAAK,IACLJ,aAAW,OACXK,QAAS,EAAKzB,iBAEd,0BAAM0B,cAAY,QAAlB,QACA,0BAAMtD,UAAU,WAAhB,UAMN,wBACEmD,IAAKD,EACLlD,UAAS,mBACPa,IAAgBH,EAAO,UAAY,KAGrC,uBACEV,UAAU,YACVoD,KAAK,IACLC,QAAS,SAAAE,GAAC,OAAI,EAAKjC,YAAYZ,EAAM6C,KAEpC7C,c,GAlKI8C,aC0HVC,E,4MArIX/B,MAAQ,CACJgC,YAAa,GACbC,mBAAoB,GACpB9C,YAAa,KACbI,WAAY,M,EAgBhB2C,UAAY,SAAC/C,EAAaM,GAAe,IAE7BuC,EAAgB,EAAKhC,MAArBgC,YAEJtC,EAAesC,EAAYlB,OAC/BV,QAAQC,IAAIX,GACZU,QAAQC,IAAIZ,GACZ,IAAIF,EAAaH,KAAK+B,KAAKzB,EAAeD,GAC1CW,QAAQC,IAAId,GAEZa,QAAQC,IAAIlB,GACZiB,QAAQC,IAAI2B,GAEZ,IAAMG,GAAUhD,EAAc,GAAKM,EAC7BwC,EAAqBD,EAAYI,MAAMD,EAAQA,EAAS1C,GAE9DW,QAAQC,IAAI4B,GAEZ,EAAKtC,SAAS,CAAER,cAAa8C,qBAAoB1C,eAEjDa,QAAQC,IAAI,EAAKL,Q,EAIrBf,cAAgB,SAAAoD,GAAS,IACbL,EAAgB,EAAKhC,MAArBgC,YACA7C,EAAuCkD,EAAvClD,YAAaI,EAA0B8C,EAA1B9C,WAAYE,EAAc4C,EAAd5C,UAE3B0C,GAAUhD,EAAc,GAAKM,EAC7BwC,EAAqBD,EAAYI,MAAMD,EAAQA,EAAS1C,GAE9D,EAAKE,SAAS,CAAER,cAAa8C,qBAAoB1C,gB,0GA5C5B+C,G,0EACbN,EAAgBZ,KAAKtC,MAArBkD,YAER5B,QAAQC,IAAIiC,EAAUN,aACtB5B,QAAQC,IAAI2B,GAERM,EAAUN,cAAgBA,E,gCACpBZ,KAAKzB,SAAS,CAAEqC,YAAaA,I,uBAC7BZ,KAAKc,UAAW,EAAG,I,6IAuCvB,IAAD,EAOCd,KAAKpB,MAJPgC,EAHC,EAGDA,YAEA7C,GALC,EAID8C,mBAJC,EAKD9C,aACAI,EANC,EAMDA,WAEIgD,EAAmBP,EAAYlB,OAErC,GAAyB,IAArByB,EAAwB,OAAO,yDAEnC,IAAMC,EAAc,CAClB,0BACArD,EAAc,2BAA6B,IAE1CsD,KAAK,KACLC,OAGL,OAEI,yBAAKpE,UAAU,kBAEX,2BAAOA,UAAU,SACb,+BACI,4BACA,oCACA,oCACA,qCACA,4CACA,wCAGJ,+BACK8C,KAAKpB,MAAMiC,mBAAmBV,KAAI,SAAAoB,GACnC,OACI,wBAAIlB,IAAKkB,EAAWC,IACpB,4BAAKD,EAAWE,MAChB,4BAAKF,EAAWG,MAChB,4BAAKH,EAAW3C,OAChB,4BAAK2C,EAAWI,WAChB,4BAAKJ,EAAWK,aAO5B,yBAAK1E,UAAU,4BACX,yBAAKA,UAAU,wFACX,yBAAKA,UAAU,sCACX,wBAAIA,UAAWkE,GACX,4BAAQlE,UAAU,kBAAkBiE,GAA2B,IADnE,eAICpD,GACG,0BAAMb,UAAU,yDAAhB,QACK,0BAAMA,UAAU,oBAAoBa,GADzC,KAC+D,IAC/D,0BAAMb,UAAU,oBAAoBiB,KAI5C,yBAAKjB,UAAU,2CACX,kBAAC,EAAD,CACIoB,aAAc6C,EACd9C,UAAW,GACXQ,eAAgB,EAChBhB,cAAemC,KAAKnC,wB,GA5HvBgE,IAAMnB,WCL5B,SAAeoB,EAAtB,kC,4CAAO,WAA8BC,GAA9B,eAAAC,EAAA,0DACCD,EAASE,GADV,yCACqBF,EAASG,QAD9B,UAEqB,MAApBH,EAASI,OAFV,gCAKmBJ,EAASK,OAL5B,aAKKC,EALL,OAMK,IAAIC,MAAMD,GANf,aAQG,IAAIC,MAAM,gCARb,4C,sBAYE,SAASC,EAAYF,GAG1B,MADArD,QAAQqD,MAAM,oBAAsBA,GAC9BA,ECbV,IAAMG,EAAU,8D,UCyCVC,E,kDACF,aAAc,IAAD,8BACT,gBACK7D,MAAQ,CACT8D,eAAgB,IAHX,E,qDAOJ,IAAD,OACEC,EAAc3C,KAAKtC,MAAMiF,YAE/B3D,QAAQC,IAAI0D,GAEZ,IAAMC,EAAgBD,EAAYxC,KAAI,SAAC0C,EAAQzC,GAAT,OAClC,yBAAKlD,UAAU,QAAQmD,IAAOD,GAC9B,+BACI,2BACI0C,KAAK,WACLC,MAAM,WACNxC,QAAS,SAAAE,GAAC,OAAI,EAAK/C,MAAMsF,SAASH,EAAQpC,EAAEwC,YAE/CJ,OAIT,OACI,8BACKD,O,GA3BSf,IAAMnB,WC3C1BwC,EAAS,CAEXC,GAAI,CAAEC,IAAK,EAAGC,MAAO,GAErBC,GAAI,CAAEF,KAAM,EAAGC,KAAM,IAGjBE,EAAS,SAACC,EAAGC,EAAGC,GAAiC,IAAvBC,EAAsB,uDAAV,MACpC3B,EAAIwB,EAAGE,GACPE,EAAIH,EAAGC,GAEb,OAAI1B,EAAI4B,EACCV,EAAOI,GAAIK,EAAUE,eAE1B7B,EAAI4B,EACCV,EAAOC,GAAIQ,EAAUE,eAEvB,GAGHC,EAAe,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAUhC,MATuB,kBAAZA,EAAK,KACdA,EAAO,CACL,CACEJ,UAAWI,EAAK,GAChBL,SAAUK,EAAK,MAKd,SAACP,EAAGC,GACT,IAAIO,EAAM,EAiBV,OAfAD,EAAKE,MAAK,SAAAC,GAAW,IACXR,EAAgCQ,EAAhCR,SADU,EACsBQ,EAAtBP,UACZZ,EAAQQ,EAAOC,EAAGC,EAAGC,OAFT,MACY,MADZ,GAIlB,OAAc,IAAVX,IAKFiB,EAAMjB,GAEC,MAIJiB,ICzCPG,E,4MAEFvF,MAAQ,CACJgC,YAAa,GACbwD,eAAgB,GAChBC,gBAAiB,GACjBC,QAAS,EAAK5G,MAAM4G,S,EAoDxBC,UAAY,SAAClE,GACT,OAAO,SAAS2B,EAAG4B,GACjB,OAAI5B,EAAE3B,GAAOuD,EAAEvD,IAAc,EACzB2B,EAAE3B,GAAOuD,EAAEvD,GAAa,EACrB,I,EAIbmE,SAAW,SAACnE,GACR,IAAIoE,EAAS,YAAO,EAAK7F,MAAMgC,aAC/B6D,EAAUC,KAAK,EAAKH,UAAUlE,IAC9BrB,QAAQC,IAAIwF,GACZ,EAAKlG,SAAS,CAAEoG,MAAOF,K,kEAlDN,IAAD,OHtBfG,MAAMpC,EAAS,CAClBqC,QAAS,CACLC,cAAe,0BAGpBC,KAAKjD,GACLkD,MAAMzC,GGiBcwC,MAAK,SAAAnE,GAAW,OAAK,EAAKrC,SAAS,CAAE6F,eAAgBxD,EAAaA,YAAa,EAAKqE,UAAUrE,U,yCAIhGM,GAAY,IAAD,EACelB,KAAKpB,MAAtCgC,EADkB,EAClBA,YADkB,EACLyD,gBAErBrF,QAAQC,IAAIiC,EAAUN,aACtB5B,QAAQC,IAAI2B,GAERM,EAAUN,aAAeM,EAAUN,cAAgBA,GACnDZ,KAAKzB,SAAS,CAAEqC,YAAaZ,KAAKiF,UAAUrE,O,gCAK1CK,GAAO,IACLqD,EAAYtE,KAAKpB,MAAjB0F,QACAD,EAAoBrE,KAAKpB,MAAzByF,gBAgBR,OAdIpD,GAAQA,EAAKvB,SAEXwF,MAAMC,QAAQd,IAAoBA,EAAgB3E,QACpD2E,EAAgBlE,KAAI,SAAA0C,GAAY5B,EAAOA,EAAKmE,QAAO,SAAAC,GAAC,OAAIA,EAAEzG,QAAUiE,QAIlEqC,MAAMC,QAAQb,IAAYA,EAAQ5E,QACpCuB,EAAKyD,KAAKZ,EAAY,WAAZ,cAAgBQ,MAI9BtF,QAAQC,IAAIgC,GAELA,I,qCAkBI4B,GAAS,IAAD,EAEsB7C,KAAKpB,MAAtCgC,EAFW,EAEXA,YAAayD,EAFF,EAEEA,gBAKrB,GAHArF,QAAQC,IAAI4D,GACZ7D,QAAQC,IAAIoF,GAEPA,EAAgBiB,SAASzC,GAMvB,CAEH,IAAIzC,EAAQiE,EAAgBkB,QAAQ1C,GAChCzC,GAAS,GACTiE,EAAgBmB,OAAQpF,EAAO,GAEnCpB,QAAQC,IAAIoF,GACZrE,KAAKzB,SAAS,CAAE8F,gBAAiBA,SAXjCA,EAAgB7G,KAAKqF,GACrB7D,QAAQC,IAAIoF,GACZrE,KAAKzB,SAAS,CAAE8F,gBAAiBA,IAYrCrF,QAAQC,IAAIe,KAAKpB,MAAMyF,iBACvBrE,KAAKzB,SAAS,CAAEqC,YAAaZ,KAAKiF,UAAUrE,O,+BAGtC,IAAD,EAEmCZ,KAAKpB,MAArCwF,EAFH,EAEGA,eAAgBxD,EAFnB,EAEmBA,YACxB5B,QAAQC,IAAI2B,GACZ5B,QAAQC,IAAImF,GACZ,IAAIqB,EF9Ga,WAAa,IAClC,IAAIA,EAAa,GADiB,mBAAT1B,EAAS,yBAATA,EAAS,gBASlC,OAPAA,EAAK5D,KAAI,SAAAoB,GACLA,EAAWpB,KAAI,SAAAkF,GACNI,EAAWH,SAASD,EAAEzG,QACvB6G,EAAWjI,KAAK6H,EAAEzG,aAIvB6G,EAAWf,OEqGGgB,CAAiBtB,GAC9BuB,EFnGc,WAAa,IACnC,IAAIA,EAAc,GADiB,mBAAT5B,EAAS,yBAATA,EAAS,gBASnC,OAPAA,EAAK5D,KAAI,SAAAoB,GACLA,EAAWpB,KAAI,SAAAkF,GACNM,EAAYL,SAASD,EAAEO,SACxBD,EAAYnI,KAAK6H,EAAEO,cAIxBD,EAAYjB,OE0FGmB,CAAkBzB,GAChC0B,EFxFa,WAAa,IAClC,IAAIA,EAAa,GADiB,mBAAT/B,EAAS,yBAATA,EAAS,gBAclC,OAXAA,EAAK5D,KAAI,SAAAoB,GACLA,EAAWpB,KAAI,SAAAkF,GACH,GACAA,EAAEzD,MAAMmE,MAAM,KAChB5F,KAAI,SAAA6F,GACDF,EAAWR,SAASU,IACrBF,EAAWtI,KAAKwI,YAKzBF,EAAWpB,OE0EGuB,CAAiB7B,GAOlC,OALApF,QAAQC,IAAIwG,GACZzG,QAAQC,IAAI0G,GACZ3G,QAAQC,IAAI6G,GAIR,6BACA,kBAAC,EAAD,MAEA,6BACI,oDAEJ,yBAAK5I,UAAU,kBACP,gDACA,kBAAC,EAAD,CAAayF,YAAe8C,EAAYzC,SAAUhD,KAAKkG,eAAeC,KAAKnG,SAEnF,yBAAK9C,UAAU,kBACP,iDACA,kBAAC,EAAD,CAAayF,YAAemD,EAAY9C,SAAUhD,KAAKkG,eAAeC,KAAKnG,SAGnF,kBAAC,EAAD,CAAgBY,YAAaA,S,GAlIlBiB,IAAMnB,WAAvByD,EASKiC,aAAe,CAElB9B,QAAS,CAAC,CACRZ,SAAU,QACT,CACDA,SAAU,WA2HLS,QC5IAkC,G,MAFM,kBAAQ,2DCedC,MAXf,WACE,OACE,yBAAKpJ,UAAU,mBACb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOqJ,OAAK,EAACC,KAAK,IAAIC,UAAWtC,IACjC,kBAAC,IAAD,CAAOsC,UAAWJ,OCJxBK,iBACE,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.39c50027.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron\">\n        <h1>Charter/Spectrum Code Challenge</h1>\n        <p>React Application using restaurant data</p>\n    </div>\n  );\n}\n\nexport default Header;","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if (prevProps.totalRecords !== this.props.totalRecords) {\n      this.totalPages = this.props.totalPages;\n    };\n\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = (page, evt) => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n  };\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n  };\n\n  fetchPageNumbers = () => {\n\n    console.log(this);\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      let pages = [];\n\n      const leftBound = currentPage - pageNeighbours;\n      const rightBound = currentPage + pageNeighbours;\n      const beforeLastPage = totalPages - 1;\n\n      const startPage = leftBound > 2 ? leftBound : 2;\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n\n      pages = range(startPage, endPage);\n\n      const pagesCount = pages.length;\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\n\n      const leftSpill = startPage > 2;\n      const rightSpill = endPage < beforeLastPage;\n\n      const leftSpillPage = LEFT_PAGE;\n      const rightSpillPage = RIGHT_PAGE;\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n        pages = [leftSpillPage, ...extraPages, ...pages];\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n        pages = [...pages, ...extraPages, rightSpillPage];\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage];\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  render() {\n    if (!this.totalRecords) return null;\n\n    if (this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Restaurants Pagination\">\n          <ul className=\"pagination\">\n            {pages.map((page, index) => {\n              if (page === LEFT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Previous\"\n                      onClick={this.handleMoveLeft}\n                    >\n                      <span aria-hidden=\"true\">&laquo;</span>\n                      <span className=\"sr-only\">Previous</span>\n                    </a>\n                  </li>\n                );\n\n              if (page === RIGHT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Next\"\n                      onClick={this.handleMoveRight}\n                    >\n                      <span aria-hidden=\"true\">&raquo;</span>\n                      <span className=\"sr-only\">Next</span>\n                    </a>\n                  </li>\n                );\n\n              return (\n                <li\n                  key={index}\n                  className={`page-item${\n                    currentPage === page ? \" active\" : \"\"\n                  }`}\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"#\"\n                    onClick={e => this.handleClick(page, e)}\n                  >\n                    {page}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport Pagination from \"../common/Pagination\";\n\nclass RestaurantList extends React.Component {\n\n    state = {\n        restaurants: [],\n        currentRestaurants: [],\n        currentPage: null,\n        totalPages: null\n    };\n    \n    async componentDidUpdate(prevState) {\n        const { restaurants } = this.props;\n\n        console.log(prevState.restaurants);\n        console.log(restaurants);\n\n        if (prevState.restaurants !== restaurants) {\n            await this.setState({ restaurants: restaurants });\n            await this.resetList( 1, 10 );\n        };\n\n    }\n\n    resetList = (currentPage, pageLimit) => {\n\n        const { restaurants } = this.state;\n\n        let totalRecords = restaurants.length;\n        console.log(totalRecords);\n        console.log(pageLimit);\n        let totalPages = Math.ceil(totalRecords / pageLimit);\n        console.log(totalPages);\n\n        console.log(currentPage);\n        console.log(restaurants);\n    \n        const offset = (currentPage - 1) * pageLimit;\n        const currentRestaurants = restaurants.slice(offset, offset + pageLimit);\n        \n        console.log(currentRestaurants);\n\n        this.setState({ currentPage, currentRestaurants, totalPages });\n\n        console.log(this.state);\n\n      };\n\n    onPageChanged = data => {\n        const { restaurants } = this.state;\n        const { currentPage, totalPages, pageLimit } = data;\n    \n        const offset = (currentPage - 1) * pageLimit;\n        const currentRestaurants = restaurants.slice(offset, offset + pageLimit);\n    \n        this.setState({ currentPage, currentRestaurants, totalPages });\n      };\n\n    render() {\n\n        const {\n            restaurants,\n            currentRestaurants,\n            currentPage,\n            totalPages\n          } = this.state;\n          const totalRestaurants = restaurants.length;\n      \n          if (totalRestaurants === 0) return <h4>No Results were found !!!</h4>;\n      \n          const headerClass = [\n            \"text-dark py-2 pr-4 m-0\",\n            currentPage ? \"border-gray border-right\" : \"\"\n          ]\n            .join(\" \")\n            .trim();\n\n\n        return (\n\n            <div className=\"container mb-5\">\n\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                        <th>Name</th>\n                        <th>City</th>\n                        <th>State</th>\n                        <th>Phone Number</th>\n                        <th>Genres</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.currentRestaurants.map(restaurant => {\n                        return (\n                            <tr key={restaurant.id}>\n                            <td>{restaurant.name}</td>\n                            <td>{restaurant.city}</td>\n                            <td>{restaurant.state}</td>\n                            <td>{restaurant.telephone}</td>\n                            <td>{restaurant.genre}</td>\n                            </tr>\n                        );\n                        })}\n                    </tbody>\n                </table>\n\n                <div className=\"row d-flex flex-row py-2\">\n                    <div className=\"w-100 px-4 py-2 d-flex flex-row flex-wrap align-items-center justify-content-between\">\n                        <div className=\"d-flex flex-row align-items-center\">\n                            <h4 className={headerClass}>\n                                <strong className=\"text-secondary\">{totalRestaurants}</strong>{\" \"}\n                                Restaurants\n                            </h4>\n                            {currentPage && (\n                                <span className=\"current-page d-inline-block h-100 pl-4 text-secondary\">\n                                Page <span className=\"font-weight-bold\">{currentPage}</span> /{\" \"}\n                                <span className=\"font-weight-bold\">{totalPages}</span>\n                                </span>\n                            )}\n                        </div>\n                        <div className=\"d-flex flex-row py-4 align-items-center\">\n                            <Pagination\n                                totalRecords={totalRestaurants}\n                                pageLimit={10}\n                                pageNeighbours={0}\n                                onPageChanged={this.onPageChanged}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            );\n    }\n}\n  \n\nexport default RestaurantList;","export async function handleResponse(response) {\n    if (response.ok) return response.json();\n    if (response.status === 400) {\n      // So, a server-side validation error occurred.\n      // Server side validation returns a string error message, so parse as text instead of json.\n      const error = await response.text();\n      throw new Error(error);\n    }\n    throw new Error(\"Network response was not ok.\");\n  }\n  \n  // In a real app, would likely call an error logging service.\n  export function handleError(error) {\n    // eslint-disable-next-line no-console\n    console.error(\"API call failed. \" + error);\n    throw error;\n  }","import { handleResponse, handleError } from \"./apiUtils\";\n//const baseUrl = process.env.REACT_APP_API_URL + \"/restaurants/\";\nconst baseUrl = \"https://code-challenge.spectrumtoolbox.com/api/restaurants/\";\n\nexport function getRestaurants() {\n  return fetch(baseUrl, {\n      headers: {\n          Authorization: \"Api-Key q3MNxtfep8Gt\",\n      },\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\n\nexport function getRestaurantsBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(restaurants => {\n        if (restaurants.length !== 1) throw new Error(\"Restaurants not found: \" + slug);\n        return restaurants[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}","import React from \"react\";\nimport '../../Style/Filter.css';\nconst createStatesList = (...args) => {\n    var statesList = [];\n    args.map(restaurant => {\n        restaurant.map(r => {\n            if (!statesList.includes(r.state)) {\n                statesList.push(r.state);\n            }; \n        })\n    })\n    return statesList.sort();\n}\n\nconst createAttiresList = (...args) => {\n    var attiresList = [];\n    args.map(restaurant => {\n        restaurant.map(r => {\n            if (!attiresList.includes(r.attire)) {\n                attiresList.push(r.attire);\n            }; \n        })\n    })\n    return attiresList.sort();\n}\n\nconst createGenresList = (...args) => {\n    var genresList = [];\n    var genre = [];\n    args.map(restaurant => {\n        restaurant.map(r => {\n            genre = [];\n            genre = r.genre.split(',');\n            genre.map(g => {\n                if (!genresList.includes(g)) {\n                    genresList.push(g);\n                };                 \n            })\n        })\n    })\n    return genresList.sort();\n}\n\nclass FiltersList extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            checkedOptions: {},\n        }\n    }\n\n    render(){\n        const optionsList = this.props.optionsList;\n\n        console.log(optionsList);\n\n        const checkboxItems = optionsList.map((option, index) => \n            <div className=\"check\" key = {index}>\n            <label>\n                <input\n                    type=\"checkbox\"\n                    value=\"{option}\"\n                    onClick={e => this.props.onChange(option, e.checked)}\n                />\n                {option}\n            </label>\n            </div>\n        );\n        return (\n            <form >\n                {checkboxItems}\n            </form>\n        );\n    }\n}\n  \nexport { createStatesList,  createAttiresList, createGenresList, FiltersList };","const dirMap = {\n    // greater-than\n    gt: { asc: 1, desc: -1 },\n    // less-than\n    lt: { asc: -1, desc: 1 }\n  };\n  \n  const doSort = (A, B, property, direction = 'ASC') => {\n    const a = A[ property ];\n    const b = B[ property ];\n  \n    if (a < b) {\n      return dirMap.lt[ direction.toLowerCase() ];\n    }\n    if (a > b) {\n      return dirMap.gt[ direction.toLowerCase() ];\n    }\n    return 0;\n  }\n  \n  const createSorter = (...args) => {\n    if (typeof args[0] === 'string') {\n      args = [\n        {\n          direction: args[1],\n          property: args[0]\n        }\n      ];\n    }\n  \n    return (A, B) => {\n      let ret = 0;\n  \n      args.some(sorter => {\n        const { property, direction = 'ASC' } = sorter;\n        const value = doSort(A, B, property, direction);\n  \n        if (value === 0) {\n          // they are equal, continue to next sorter if any\n          return false;\n        } else {\n          // they are different, stop at current sorter\n          ret = value;\n  \n          return true;\n        }\n      })\n  \n      return ret;\n    }\n  }\n  \n  export { createSorter };","import React from \"react\";\nimport Header from \"../common/Header\";\nimport RestaurantList from \"../restaurants/RestaurantList\";\nimport { getRestaurants } from \"../../api/restaurantsApi\";\nimport { createStatesList,  createAttiresList, createGenresList, FiltersList } from '../common/Filter';\nimport { createSorter } from '../common/Sort';\n\nclass HomePage extends React.Component {\n\n    state = {\n        restaurants: [],\n        allRestaurants: [],\n        selectedOptions: [],\n        sorters: this.props.sorters\n    };\n\n    static defaultProps = {\n\n        sorters: [{\n          property: 'name'\n        }, {\n          property: 'state'\n        }]\n\n\n      };\n\n    componentDidMount() {\n        getRestaurants().then(restaurants => (this.setState({ allRestaurants: restaurants, restaurants: this.parseData(restaurants) })));\n\n    }\n\n    componentDidUpdate(prevState) {\n        const { restaurants, selectedOptions } = this.state;\n\n        console.log(prevState.restaurants);\n        console.log(restaurants);\n\n        if (prevState.restaurants && prevState.restaurants !== restaurants) {\n            this.setState({ restaurants: this.parseData(restaurants) });\n        };\n\n    }\n\n    parseData(data) {\n        const { sorters } = this.state;\n        const { selectedOptions } = this.state;\n\n        if (data && data.length) {\n\n          if (Array.isArray(selectedOptions) && selectedOptions.length) {\n            selectedOptions.map(option => { data = data.filter(r => r.state === option);})\n            //data = data.filter(r => r.state === 'FL');\n          }\n\n          if (Array.isArray(sorters) && sorters.length) {\n            data.sort(createSorter(...sorters));\n          }\n        }\n    \n        console.log(data);\n\n        return data;\n      }\n\n    compareBy = (key) => {\n        return function(a, b) {\n          if (a[key] < b[key]) return -1;\n          if (a[key] > b[key]) return 1;\n          return 0;\n        };\n      };\n      \n    sortList = (key) => {\n        let arrayCopy = [...this.state.restaurants];\n        arrayCopy.sort(this.compareBy(key));\n        console.log(arrayCopy);\n        this.setState({ users: arrayCopy });\n    };\n\n    handleOnChange(option) {\n\n        const { restaurants, selectedOptions } = this.state;\n\n        console.log(option);\n        console.log(selectedOptions);\n\n        if (!selectedOptions.includes(option)) {\n\n            selectedOptions.push(option);\n            console.log(selectedOptions);\n            this.setState({ selectedOptions: selectedOptions})\n\n        } else {\n\n            var index = selectedOptions.indexOf(option);\n            if (index >= 0) {\n                selectedOptions.splice( index, 1 );\n            }\n            console.log(selectedOptions);\n            this.setState({ selectedOptions: selectedOptions})\n\n        }\n        console.log(this.state.selectedOptions)\n        this.setState({ restaurants: this.parseData(restaurants) });\n    }\n\n    render() {\n\n        const { allRestaurants, restaurants } = this.state;\n        console.log(restaurants);\n        console.log(allRestaurants);\n        let statesList = createStatesList(allRestaurants);\n        let attiresList = createAttiresList(allRestaurants);\n        let genresList = createGenresList(allRestaurants);\n\n        console.log(statesList);\n        console.log(attiresList);\n        console.log(genresList);\n\n\n        return (\n            <div>\n            <Header />\n            \n            <div>\n                <h3>List of Restaurants</h3>\n            </div>\n            <div className=\"filter-section\">\n                    <h6>Filter by State:</h6>\n                    <FiltersList optionsList = {statesList} onChange={this.handleOnChange.bind(this)}/>\n            </div>\n            <div className=\"filter-section\">\n                    <h6>Filter by Genres:</h6>\n                    <FiltersList optionsList = {genresList} onChange={this.handleOnChange.bind(this)}/>\n            </div>\n\n            <RestaurantList restaurants={restaurants} />\n        </div>\n            );\n    }\n}\n  \n\nexport default HomePage;","import React from \"react\";\n\nconst PageNotFound = () => ( <h1>Oops!!! Page Not Found!!!</h1> );\n\nexport default PageNotFound;","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport HomePage from \"./home/HomePage\";\nimport '../Style/App.css';\nimport PageNotFound from './PageNotFound';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route component={PageNotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport'bootstrap/dist/css/bootstrap.min.css';\nimport App from './Components/App';\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}